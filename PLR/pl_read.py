# -*- coding: utf-8 -*-
"""PL_read.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QYpM27GVlKU7cVlgFcXSpUpQji197sfJ
"""

# pip install paddlepaddle-gpu
# pip install paddleocr

# wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.0g-2ubuntu4_amd64.deb
# sudo dpkg -i libssl1.1_1.1.0g-2ubuntu4_amd64.deb

# pip install gTTS gradio pdfminer.six

# git clone https://github.com/PaddlePaddle/PaddleOCR

from paddleocr import PaddleOCR, draw_ocr
from matplotlib import pyplot as plt
from gtts import gTTS
from PIL import Image
import gradio as gr
import pickle
import cv2
import os

ocr = PaddleOCR(lang='en')

img_path = '/content/attachment_100951433.jfif'
result = ocr.ocr(img_path)

result

all_text = []
for block in result:
    for line in block:
        text = line[1][0]
        all_text.append(text)

for text in all_text:
    print(text)

boxes = []
txts = []
scores = []
for item in result:
    for subitem in item:
        boxes.append(subitem[0])
        txts.append(subitem[1][0])
        scores.append(subitem[1][1])

scores

font_path = '/content/PaddleOCR/doc/fonts/latin.ttf'

img = cv2.imread(img_path)
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

plt.figure(figsize=(25,35))
annotated = draw_ocr(img, boxes, txts, scores, font_path=font_path)
plt.imshow(annotated)

"""## here we join all the text and after that store into text file and that coverted into pdf"""

my_texts =' '.join(txts)
my_texts

f=open("output.txt","w")
f.write(my_texts)

"""Now This text will covert into Mp3"""

f=open("/content/output.txt","r")
read_file=f.read()
convert_audio= gTTS(text=read_file,lang='en',slow = False)
convert_audio.save("good.mp3")

model = open('model.pkl', 'wb')
pickle.dump(convert_audio, model)

def pdf_to_text(file):
   text = file.name
   myobj = gTTS(text=read_file, lang='en', slow=False)
   myobj.save("output.wav")
   return 'output.wav'

iface = gr.Interface(
   fn = pdf_to_text,
   inputs = 'file',
   outputs = 'audio',
   title="Text to  Audio Conversion",
   description="Upload a text file and get the content as audio."
   )
iface.launch(debug=True)

"""Here one more thing whre we can directly give image and from that it will convert into audio"""

def image_to_audio(input_image):
    img = cv2.cvtColor(input_image, cv2.COLOR_BGR2RGB)
    result = ocr.ocr(img)
    all_text = []
    for block in result[0]:
        text = block[1][0]
        all_text.append(text)
    full_text = ' '.join(all_text)
    audio = gTTS(text=full_text, lang='en', slow=False)
    audio_path = "output.mp3"
    audio.save(audio_path)
    image_pil = Image.fromarray(cv2.cvtColor(input_image, cv2.COLOR_BGR2RGB))

    return image_pil, audio_path, full_text, full_text  # Return the text twice, once for image and once for audio

iface = gr.Interface(
    fn=image_to_audio,
    inputs=gr.inputs.Image(),
    outputs=[
        gr.outputs.Image(type="pil"),
        gr.outputs.Audio(type="filepath"),
        gr.outputs.Textbox(label="Text from Image"),
        gr.outputs.Textbox(label="Text from Audio")
    ],
    title="Image to Audio Conversion",
    description="Upload an image containing text, and it will be converted to audio while displaying the text.",
)

iface.launch()